(()=>{"use strict";var n={159:(n,e,t)=>{t.d(e,{A:()=>s});var o=t(601),r=t.n(o),a=t(314),i=t.n(a)()(r());i.push([n.id,'/** main css **/\n:root {\n    --background-color: #ffffff;\n    --header-bg: #ffffff;\n    --sidebar-bg: #f8f9fa;\n    --text-color: #212529;\n    --text-muted: #6c757d;\n    --border-color: #dee2e6;\n    --hover-bg: rgba(0, 123, 255, 0.1);\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: Arial, sans-serif;\n    line-height: 1.6;\n}\n\n/** layout css **/\n\n.app-container {\n    position: relative;\n    z-index: 1;\n    display: grid;\n    grid-template-areas:\n        "header header"\n        "sidebar main";\n    grid-template-columns: 250px 1fr;\n    grid-template-rows: auto 1fr;\n    min-height: 100vh;\n    background-color: var(--bg-color);\n    color: var(--text-color);\n}\n\n.app-header {\n    grid-area: header;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem;\n    background-color: var(--header-bg);\n    border-bottom: 1px solid var(--border-color);\n}\n\n.header-left, .header-right {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.menu-toggle {\n    display: none;\n    flex-direction: column;\n    gap: 4px;\n    background: none;\n    border: none;\n    cursor: pointer;\n    padding: 4px;\n}\n\n.menu-toggle span {\n    display: block;\n    width: 24px;\n    height: 2px;\n    background-color: var(--text-color);\n    transition: 0.3s;\n}\n\n.app-sidebar {\n    grid-area: sidebar;\n    background-color: var(--sidebar-bg);\n    border-right: 1px solid var(--border-color);\n    padding: 1rem;\n    overflow-y: auto;\n}\n\n.sidebar-section {\n    margin-bottom: 2rem;\n}\n\n.sidebar-section h2 {\n    font-size: 1rem;\n    text-transform: uppercase;\n    color: var(--text-muted);\n    margin-bottom: 0.5rem;\n}\n\n.sidebar-nav ul {\n    list-style: none;\n    padding: 0;\n}\n\n.sidebar-nav a {\n    display: block;\n    padding: 0.5rem;\n    color: var(--text-color);\n    text-decoration: none;\n    border-radius: 4px;\n    transition: background-color 0.2s;\n}\n\n.sidebar-nav a:hover {\n    background-color: var(--hover-bg);\n}\n\n.sidebar-nav a.active {\n    background-color: var(--hover-bg);\n    color: #4FFFB0;\n    font-weight: bold;\n}\n\n.app-main {\n    grid-area: main;\n    padding: 2rem;\n    overflow-y: auto;\n}\n\n.content-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 2rem;\n}\n\n.user-profile {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.user-avatar {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    overflow: hidden;\n}\n\n.user-name {\n    cursor: pointer;\n}\n\n.user-name:hover {\n    text-decoration: underline;\n}\n\n.user-avatar .default-avatar {\n    width: 100%;\n    height: 100%;\n    background-color: #4FFFB0;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1rem;\n    font-weight: bold;\n    user-select: none;\n}\n\n.user-avatar-img {\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    background-position: center;\n}\n\n.user-profile {\n    position: relative;\n    cursor: pointer;\n}\n\n.user-dropdown {\n    position: absolute;\n    top: 100%;\n    right: 0;\n    background: white;\n    border: 1px solid #dee2e6;\n    border-radius: 4px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    min-width: 150px;\n    margin-top: 0.5rem;\n    z-index: 1000;\n}\n\n.dropdown-item {\n    padding: 0.75rem 1rem;\n    transition: background-color 0.2s;\n}\n\n.dropdown-item:hover {\n    background-color: var(--hover-bg);\n}\n\n@media (max-width: 768px) {\n    .app-container {\n        grid-template-areas:\n            "header"\n            "main";\n        grid-template-columns: 1fr;\n    }\n\n    .menu-toggle {\n        display: flex;\n    }\n\n    .app-sidebar {\n        position: fixed;\n        left: -250px;\n        top: 0;\n        height: 100vh;\n        width: 250px;\n        transition: 0.3s;\n        z-index: 1000;\n    }\n\n    .app-sidebar.active {\n        left: 0;\n    }\n}\n\n.app-title {\n    margin: 0;\n    font-size: 1.8rem;\n    display: flex;\n    align-items: baseline;\n}\n\n.app-title .todo {\n    font-weight: 300;\n    color: #17B169;\n}\n\n.app-title .list {\n    font-weight: 700;\n    color: #4FFFB0;\n}\n\n.todo-icon {\n    width: 24px;  /* Adjust size of the icon */\n    height: 24px; /* Adjust size of the icon */\n    margin-right: 8px; /* Space between icon and text */\n    vertical-align: middle; /* Align the icon vertically with the title */\n}\n\n.project-item.active {\n    background-color: var(--hover-bg);\n    color: #4FFFB0;\n    font-weight: bold;\n}\n\n.about-content .features-text {\n    margin-top: 2rem;\n}\n\n\n/** Onboarding css **/\n\n.overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n}\n\n.onboarding-modal {\n    background: white;\n    padding: 2rem;\n    border-radius: 8px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n    width: 90%;\n    max-width: 500px;\n    text-align: center;\n}\n\n.onboarding-modal h2 {\n    margin-bottom: 1.5rem;\n    color: #333;\n}\n\n.onboarding-modal input {\n    width: 100%;\n    padding: 0.8rem;\n    margin-bottom: 1rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\n.avatar-upload {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2rem;\n    margin: 1.5rem 0;\n}\n\n.avatar-preview {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    overflow: hidden;\n    border: 2px solid #ddd;\n    margin-bottom: 1rem;\n}\n\n#avatar-preview-image {\n    width: 100%;\n    height: 100%;\n    background-size: cover;\n    background-position: center;\n}\n\n.avatar-actions {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n}\n\n.onboarding-modal .avatar-preview .default-avatar {\n    width: 100%;\n    height: 100%;\n    background-color: #4FFFB0;\n    color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 4rem; /* or whatever size you prefer */\n    font-weight: bold;\n    user-select: none;\n}\n.file-input {\n    display: none;\n}\n\n.btn {\n    padding: 0.8rem 1.5rem;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: 600;\n    transition: all 0.2s ease;\n}\n\n.btn-primary {\n    background-color: #4FFFB0;\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-primary:hover {\n    background-color: #17B169;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.btn-secondary {\n    background-color: #f8f9fa;\n    color: #212529;\n    border: 1px solid #dee2e6;\n}\n\n.btn-secondary:hover {\n    background-color: #e2e6ea;\n    transform: translateY(-1px);\n}\n\n/** Projects css **/\n\n.projects-list {\n    margin: 1rem 0;\n}\n\n.project-item {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0.5rem;\n    margin: 0.25rem 0;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.project-item:hover {\n    background-color: var(--hover-bg);\n}\n\n.sidebar-nav a.active,\n.project-item.active {\n    background-color: var(--hover-bg);\n    font-weight: bold;\n}\n\n.project-name {\n    flex-grow: 1;\n    margin-right: 0.5rem;\n}\n\n.delete-project {\n    opacity: 0;\n    background: none;\n    border: none;\n    color: #212529;\n    cursor: pointer;\n    padding: 0.25rem;\n    transition: opacity 0.2s;\n}\n\n.project-item:hover .delete-project {\n    opacity: 1;\n}\n\n.add-project-form {\n    margin-top: 1rem;\n}\n\n.add-project-input {\n    width: 100%;\n    padding: 0.5rem;\n    border: 1px solid var(--border-color);\n    border-radius: 4px;\n    margin-bottom: 0.5rem;\n}\n\n.project-actions {\n    display: flex;\n    gap: 0.5rem;\n}\n\n.btn-add-project {\n    width: 100%;\n    padding: 0.5rem;\n    background-color: #4FFFB0;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.btn-add-project:hover {\n    background-color: #17B169;\n}\n\n/** Todos css **/\n\n.modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n}\n\n.todo-modal {\n    background: white;\n    padding: 2rem;\n    border-radius: 8px;\n    width: 90%;\n    max-width: 500px;\n}\n\n.todo-form {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.form-group {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.form-group label {\n    font-weight: bold;\n}\n\n.form-group input,\n.form-group textarea,\n.form-group select {\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n}\n\n.todo-list {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n    margin-top: 1rem;\n}\n\n.todo-item {\n    position: relative;\n    display: flex;\n    align-items: center;\n    padding: 1rem;\n    background: white;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    gap: 1rem;\n}\n\n.todo-checkbox {\n    width: 20px;\n    height: 20px;\n    cursor: pointer;\n}\n\n.todo-content {\n    flex-grow: 1;\n}\n\n.todo-title {\n    font-weight: bold;\n    margin-bottom: 0.25rem;\n}\n\n.todo-description {\n    font-size: 0.9rem;\n    color: #666;\n}\n\n.todo-metadata {\n    display: flex;\n    gap: 1rem;\n    font-size: 0.8rem;\n    color: #666;\n}\n\n.todo-item .todo-actions {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n}\n\n.todo-modal .todo-actions {\n    position: static;\n    display: flex;\n    gap: 1rem;\n    margin-top: 1rem;\n}\n\n.todo-actions button {\n    padding: 0.25rem;\n    background: none;\n    border: none;\n    cursor: pointer;\n    color: #6c757d;\n    transition: color 0.2s;\n}\n\n.todo-actions button:hover {\n    color: #4FFFB0;\n}\n\n.edit-todo svg {\n    width: 20px;\n    height: 20px;\n}\n\n.btn-todo {\n    padding: 0.8rem 1.5rem;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: 600;\n    transition: all 0.2s ease;\n    min-width: 100px;\n}\n\n.btn-todo.btn-primary {\n    background-color: #4FFFB0;\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-todo.btn-primary:hover {\n    background-color: #17B169;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    color: white;\n}\n\n.btn-todo.btn-secondary {\n    background-color: #f8f9fa;\n    color: #212529;\n    border: 1px solid #dee2e6;\n}\n\n.btn-todo.btn-secondary:hover {\n    background-color: #e2e6ea;\n    transform: translateY(-1px);\n}\n\n.project-section {\n    margin-bottom: 2rem;\n}\n\n.project-header {\n    font-size: 1.1rem;\n    margin: 1.5rem 0 1rem 0;\n    font-weight: 600;\n}\n\n.project-section:first-child .project-header {\n    margin-top: 0;\n}\n\n.add-task-btn {\n    padding: 0.8rem 1.5rem;\n    background-color: #4FFFB0;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    font-weight: 600;\n    transition: background-color 0.2s;\n}\n\n.add-task-btn:hover {\n    background-color: #17B169;\n}\n\n.btn-todo.btn-danger {\n    background-color: #dc3545;\n    color: white;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.btn-todo.btn-danger:hover {\n    background-color: #c82333;\n    transform: translateY(-1px);\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    color: white;\n}\n\n.about-content {\n    margin: 1.5rem 0;\n    line-height: 1.6;\n}\n\n.about-content ul {\n    margin: 1rem 0;\n    padding-left: 1.5rem;\n}\n\n.about-content .signature {\n    margin-top: 2rem;\n    font-style: italic;\n    color: #666;\n    line-height: 1.5;\n}\n\n.add-task-btn.disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n    opacity: 0.7;\n}\n\n.add-task-btn.disabled:hover {\n    background-color: #cccccc;\n}\n\n/** ------------------ **/\n/**   Extra Animation css **/\n/** ------------------ **/\n\n:root {\n    --background-color: #f4f7f6;\n    --header-bg: #ffffff;\n    --sidebar-bg: #e6f0ed;\n    --text-color: #2c3e50;\n    --text-muted: #7f8c8d;\n    --border-color: #b2d8b2;\n    --hover-bg: rgba(75, 255, 176, 0.15);\n    --accent-color: #4FFFB0;\n    --accent-dark: #17B169;\n    --shadow-color: rgba(0, 0, 0, 0.08);\n}\n\n/* Add subtle animation to the entire app */\n.app-container {\n    transition: background-color 0.3s ease;\n}\n\n/* Enhanced hover effects */\n.project-item,\n.sidebar-nav a,\n.todo-item {\n    position: relative;\n    overflow: hidden;\n    transition: all 0.3s ease;\n}\n\n.project-item::before,\n.sidebar-nav a::before,\n.todo-item::before {\n    content: \'\';\n    position: absolute;\n    top: 0;\n    left: -100%;\n    width: 100%;\n    height: 100%;\n    background: linear-gradient(120deg, transparent, var(--hover-bg), transparent);\n    transition: all 0.5s ease;\n    z-index: 1;\n}\n\n.project-item:hover::before,\n.sidebar-nav a:hover::before,\n.todo-item:hover::before {\n    left: 100%;\n}\n\n/* Subtle scale effect on hover */\n.project-item:hover,\n.sidebar-nav a:hover,\n.todo-item:hover {\n    transform: scale(1.02);\n    box-shadow: 0 4px 6px var(--shadow-color);\n}\n\n/* Animated buttons */\n.btn-primary,\n.btn-add-project,\n.add-task-btn {\n    position: relative;\n    overflow: hidden;\n    z-index: 1;\n}\n\n.btn-primary::after,\n.btn-add-project::after,\n.add-task-btn::after {\n    content: \'\';\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 0;\n    background-color: var(--accent-dark);\n    transition: height 0.3s ease;\n    z-index: -1;\n}\n\n.btn-primary:hover::after,\n.btn-add-project:hover::after,\n.add-task-btn:hover::after {\n    height: 100%;\n}\n\n/* Animated todo checkboxes */\n.todo-checkbox {\n    appearance: none;\n    width: 24px;\n    height: 24px;\n    border: 2px solid var(--accent-color);\n    border-radius: 4px;\n    outline: none;\n    transition: all 0.3s ease;\n}\n\n.todo-checkbox:checked {\n    background-color: var(--accent-color);\n    border-color: var(--accent-color);\n    animation: checkbox-pulse 0.5s;\n}\n\n@keyframes checkbox-pulse {\n    0% { transform: scale(1); }\n    50% { transform: scale(1.2); }\n    100% { transform: scale(1); }\n}\n\n/* Subtle text animations */\n.todo-title {\n    transition: color 0.3s ease;\n}\n\n.todo-item:hover .todo-title {\n    color: var(--accent-color);\n}\n\n/* Enhanced modal animations */\n.modal-overlay {\n    animation: fade-in 0.3s ease;\n}\n\n.todo-modal {\n    animation: slide-up 0.4s ease;\n}\n\n@keyframes fade-in {\n    from { opacity: 0; }\n    to { opacity: 1; }\n}\n\n@keyframes slide-up {\n    from { \n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to { \n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n/* Soft glowing effect for active states */\n.project-item.active,\n.sidebar-nav a.active {\n    box-shadow: 0 0 10px rgba(75, 255, 176, 0.3);\n    border-left: 4px solid var(--accent-color);\n    color: black;\n}\n\n/* Responsive adjustments */\n@media (max-width: 768px) {\n    .app-sidebar {\n        animation: slide-in 0.4s ease;\n    }\n\n    @keyframes slide-in {\n        from { left: -300px; }\n        to { left: 0; }\n    }\n}\n\n/* Additional subtle touches */\n.app-title .todo {\n    transition: color 0.3s ease;\n}\n\n.app-title:hover .todo {\n    color: var(--accent-color);\n}',""]);const s=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},601:n=>{n.exports=function(n){return n[1]}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],c=o.base?d[0]+o.base:d[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var u=t(p),m={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==u)e[u].references++,e[u].updater(m);else{var h=r(m,o);o.byIndex=s,e.splice(s,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);t.update(n);return function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var d=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=d}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&"SCRIPT"===e.currentScript.tagName.toUpperCase()&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0;var o=t(72),r=t.n(o),a=t(825),i=t.n(a),s=t(659),d=t.n(s),c=t(56),l=t.n(c),p=t(540),u=t.n(p),m=t(113),h=t.n(m),g=t(159),v={};v.styleTagTransform=h(),v.setAttributes=l(),v.insert=d().bind(null,"head"),v.domAPI=i(),v.insertStyleElement=u();r()(g.A,v);g.A&&g.A.locals&&g.A.locals;const b=t.p+"62a6390075c5a9002a1e.png",f=(Math.pow(10,8),6e4),y=36e5,x=Symbol.for("constructDateFrom");function w(n,e){return"function"==typeof n?n(e):n&&"object"==typeof n&&x in n?n[x](e):n instanceof Date?new n.constructor(e):new Date(e)}function j(n){return w(n,Date.now())}function k(n,e){return w(e||n,n)}function T(n,e){const t=k(n,e?.in);return t.setHours(0,0,0,0),t}function D(n,e,t){const[o,r]=function(n,...e){const t=w.bind(null,n||e.find((n=>"object"==typeof n)));return e.map(t)}(t?.in,n,e);return+T(o)==+T(r)}function S(n,e){return D(w(e?.in||n,n),j(e?.in||n))}function M(n,e){const t=()=>w(e?.in,NaN),o=e?.additionalDigits??2,r=function(n){const e={},t=n.split(E.dateTimeDelimiter);let o;if(t.length>2)return e;/:/.test(t[0])?o=t[0]:(e.date=t[0],o=t[1],E.timeZoneDelimiter.test(e.date)&&(e.date=n.split(E.timeZoneDelimiter)[0],o=n.substr(e.date.length,n.length)));if(o){const n=E.timezone.exec(o);n?(e.time=o.replace(n[1],""),e.timezone=n[1]):e.time=o}return e}(n);let a;if(r.date){const n=function(n,e){const t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),o=n.match(t);if(!o)return{year:NaN,restDateString:""};const r=o[1]?parseInt(o[1]):null,a=o[2]?parseInt(o[2]):null;return{year:null===a?r:100*a,restDateString:n.slice((o[1]||o[2]).length)}}(r.date,o);a=function(n,e){if(null===e)return new Date(NaN);const t=n.match(P);if(!t)return new Date(NaN);const o=!!t[4],r=A(t[1]),a=A(t[2])-1,i=A(t[3]),s=A(t[4]),d=A(t[5])-1;if(o)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,s,d)?function(n,e,t){const o=new Date(0);o.setUTCFullYear(n,0,4);const r=o.getUTCDay()||7,a=7*(e-1)+t+1-r;return o.setUTCDate(o.getUTCDate()+a),o}(e,s,d):new Date(NaN);{const n=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(F[e]||(N(n)?29:28))}(e,a,i)&&function(n,e){return e>=1&&e<=(N(n)?366:365)}(e,r)?(n.setUTCFullYear(e,a,Math.max(r,i)),n):new Date(NaN)}}(n.restDateString,n.year)}if(!a||isNaN(+a))return t();const i=+a;let s,d=0;if(r.time&&(d=function(n){const e=n.match(C);if(!e)return NaN;const t=I(e[1]),o=I(e[2]),r=I(e[3]);if(!function(n,e,t){if(24===n)return 0===e&&0===t;return t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,o,r))return NaN;return t*y+o*f+1e3*r}(r.time),isNaN(d)))return t();if(!r.timezone){const n=new Date(i+d),t=k(0,e?.in);return t.setFullYear(n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()),t.setHours(n.getUTCHours(),n.getUTCMinutes(),n.getUTCSeconds(),n.getUTCMilliseconds()),t}return s=function(n){if("Z"===n)return 0;const e=n.match(L);if(!e)return 0;const t="+"===e[1]?-1:1,o=parseInt(e[2]),r=e[3]&&parseInt(e[3])||0;if(!function(n,e){return e>=0&&e<=59}(0,r))return NaN;return t*(o*y+r*f)}(r.timezone),isNaN(s)?t():k(i+d+s,e?.in)}const E={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},P=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,C=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,L=/^([+-])(\d{2})(?::?(\d{2}))?$/;function A(n){return n?parseInt(n):1}function I(n){return n&&parseFloat(n.replace(",","."))||0}const F=[31,null,31,30,31,30,31,31,30,31,30,31];function N(n){return n%400==0||n%4==0&&n%100!=0}function $(n){return+k(n)>Date.now()}class q{constructor(n,e="",t=null,o="medium"){this.id=Date.now().toString(),this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.completed=!1,this.createdAt=new Date}}class B{constructor(){this.todos=new Map,this.loadTodos()}loadTodos(){const n=localStorage.getItem("ToDoListTodos");if(n){const e=JSON.parse(n);this.todos=new Map(e)}}saveTodos(){localStorage.setItem("ToDoListTodos",JSON.stringify([...this.todos]))}addTodo(n,e){this.todos.has(n)||this.todos.set(n,[]),this.todos.get(n).push(e),this.saveTodos()}getTodo(n,e){const t=this.todos.get(n);return t?t.find((n=>n.id===e)):null}updateTodo(n,e,t){const o=this.todos.get(n);if(o){const n=o.findIndex((n=>n.id===e));-1!==n&&(o[n]=t,this.saveTodos())}}getAllTodos(){const n=[];return this.todos.forEach(((e,t)=>{e.forEach((e=>{n.push({...e,projectId:t})}))})),n}getTodayTodos(){return this.getAllTodos().filter((n=>!(!n.dueDate||n.completed)&&S(M(n.dueDate))))}getUpcomingTodos(){return this.getAllTodos().filter((n=>!(!n.dueDate||n.completed)&&$(M(n.dueDate)))).sort(((n,e)=>M(n.dueDate)-M(e.dueDate)))}deleteTodo(n,e){const t=this.todos.get(n);if(t){const n=t.findIndex((n=>n.id===e));-1!==n&&(t.splice(n,1),this.saveTodos())}}toggleTodoComplete(n,e){const t=this.todos.get(n);if(t){const n=t.find((n=>n.id===e));n&&(n.completed=!n.completed,this.saveTodos())}}getCompletedTodos(){return this.getAllTodos().filter((n=>n.completed))}getActiveTodos(){return this.getAllTodos().filter((n=>!n.completed))}removeProjectTasks(n){this.todos.delete(n),this.saveTodos()}}class z{constructor(n,e,t){this.userData=n,this.activeProjectId=null,this.todoManager=e,this.projectManager=t}createHeader(){const n=document.createElement("header");return n.className="app-header",n.innerHTML=`\n            <div class="header-left">\n                <button class="menu-toggle" aria-label="Toggle Menu">\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                </button>\n                <h1 class="app-title">\n                    <img src="${b}" alt="Todo Icon" class="todo-icon" />\n                    <span class="todo">ToDo</span><span class="list">List</span>\n                </h1>\n            </div>\n            <div class="header-right">\n                <div class="user-profile">\n                    <span class="user-name">${this.userData.name}</span>\n                    <div class="user-avatar">\n                        ${this.createAvatarElement()}\n                    </div>\n                    <div class="user-dropdown" style="display: none;">\n                        <div class="dropdown-item about">About</div>\n                        <div class="dropdown-item sign-out">Sign Out</div>\n                    </div>\n                </div>\n            </div>\n        `,n}createSidebar(){const n=document.createElement("aside");return n.className="app-sidebar",n.innerHTML='\n            <nav class="sidebar-nav">\n                <div class="sidebar-section">\n                    <h2>Home</h2>\n                    <ul>\n                        <li><a href="#" class="active" data-view="all">All Tasks</a></li>\n                        <li><a href="#" data-view="today">Today</a></li>\n                        <li><a href="#" data-view="upcoming">Upcoming</a></li>\n                        <li><a href="#" data-view="completed">Completed</a></li>\n                    </ul>\n                </div>\n                <div class="sidebar-section">\n                    <h2>Projects</h2>\n                    <ul class="projects-list">\n                    </ul>\n                    <button class="btn-add-project" id="add-project-btn">+ Add Project</button>\n                    <div class="add-project-form" style="display: none;">\n                        <input type="text" class="add-project-input" placeholder="Project name">\n                        <div class="project-actions">\n                            <button class="btn-add-project" id="save-project-btn">Add</button>\n                            \n                        </div>\n                    </div>\n                </div>\n            </nav>\n        ',n}createMain(){const n=document.createElement("main");return n.className="app-main",n.innerHTML='\n            <div class="content-header">\n                <h2>All Tasks</h2>\n                <button class="add-task-btn">+ Add Task</button>\n            </div>\n            <div class="tasks-container">\n            </div>\n        ',n}createAvatarElement(){if("default"===this.userData.avatar){return`<div class="default-avatar"><span>${this.userData.name.split(" ").map((n=>n[0])).join("").toUpperCase().slice(0,2)}</span></div>`}return`<div class="user-avatar-img" style="background-image: url(${this.userData.avatar})"></div>`}createTodoModal(n=null){const e=document.createElement("div");e.className="modal-overlay";const t=this.projectManager.getAllProjects().map((e=>`\n                <option value="${e.id}" ${e.id===(n?.projectId||this.activeProjectId)?"selected":""}>\n                    ${e.name}\n                </option>\n            `)).join("");return e.innerHTML=`\n            <div class="todo-modal">\n                <h2>${n?"Edit Task":"Add New Task"}</h2>\n                <form class="todo-form">\n                    <div class="form-group">\n                        <label for="todo-title">Title</label>\n                        <input type="text" id="todo-title" value="${n?.title||""}" required>\n                    </div>\n                    <div class="form-group">\n                        <label for="todo-project">Project</label>\n                        <select id="todo-project" required>\n                            ${t}\n                        </select>\n                    </div>\n                    <div class="form-group">\n                        <label for="todo-description">Description</label>\n                        <textarea id="todo-description" rows="3">${n?.description||""}</textarea>\n                    </div>\n                    <div class="form-group">\n                        <label for="todo-due-date">Due Date</label>\n                        <input type="date" id="todo-due-date" value="${n?.dueDate||""}">\n                    </div>\n                    <div class="form-group">\n                        <label for="todo-priority">Priority</label>\n                        <select id="todo-priority">\n                            <option value="low" ${"low"===n?.priority?"selected":""}>Low</option>\n                            <option value="medium" ${n&&"medium"!==n?.priority?"":"selected"}>Medium</option>\n                            <option value="high" ${"high"===n?.priority?"selected":""}>High</option>\n                        </select>\n                    </div>\n                    <div class="todo-actions">\n                        <button type="submit" class="btn-todo btn-primary">\n                            ${n?"Update":"Add Task"}\n                        </button>\n                        ${n?'<button type="button" class="btn-todo btn-danger" id="delete-todo">Delete</button>':""}\n                        <button type="button" class="btn-todo btn-secondary" id="cancel-todo">Cancel</button>\n                    </div>\n                </form>\n            </div>\n        `,e}showTodoModal(n=null,e=null){const t=this.createTodoModal(n);document.body.appendChild(t);const o=t.querySelector(".todo-form"),r=t.querySelector("#cancel-todo"),a=t.querySelector("#delete-todo");o.addEventListener("submit",(o=>{o.preventDefault();const r=document.getElementById("todo-title").value,a=document.getElementById("todo-description").value,i=document.getElementById("todo-due-date").value,s=document.getElementById("todo-priority").value,d=document.getElementById("todo-project").value;if(r.trim()){if(n)n.title=r,n.description=a,n.dueDate=i,n.priority=s,this.todoManager.updateTodo(e,n.id,n);else{const n=new q(r,a,i,s);this.todoManager.addTodo(d,n)}this.renderCurrentView(),document.body.removeChild(t)}})),r.addEventListener("click",(()=>{document.body.removeChild(t)})),a&&a.addEventListener("click",(()=>{this.todoManager.deleteTodo(e,n.id),this.renderCurrentView(),document.body.removeChild(t)}))}showSignOutConfirmation(){const n=document.createElement("div");n.className="modal-overlay",n.innerHTML='\n            <div class="todo-modal">\n                <h2>Sign Out</h2>\n                <p>Are you sure you want to sign out? This will clear all your data...</p>\n                <p style="font-size: 0.9em; color: #666; margin-top: 0.5rem;">\n                    (Yes, this is just for testing. In a real app, your data would be saved!)\n                </p>\n                <div class="todo-actions" style="margin-top: 2rem;">\n                    <button class="btn-todo btn-primary" id="confirm-signout">Sign Out</button>\n                    <button class="btn-todo btn-secondary" id="cancel-signout">Cancel</button>\n                </div>\n            </div>\n        ',document.body.appendChild(n);const e=n.querySelector("#confirm-signout"),t=n.querySelector("#cancel-signout");e.addEventListener("click",(()=>{localStorage.clear(),window.location.reload()})),t.addEventListener("click",(()=>{document.body.removeChild(n)}))}showAboutModal(){const n=document.createElement("div");n.className="modal-overlay",n.innerHTML='\n            <div class="todo-modal">\n                <h2>About ToDoList</h2>\n                <div class="about-content">\n                    <p>ToDoList is a project management application built as part of The Odin Project curriculum. It\'s designed to help organize projects and tasks.</p>\n                    \n                   <p class="features-text">Features include:</p>\n                    <ul>\n                        <li>Project organization</li>\n                        <li>Task management with priorities and due dates</li>\n                        <li>Different task views (Today, Upcoming, Completed)</li>\n                    </ul>\n                    \n                    <p class="signature">\n                        Joel Cornfield\n                    </p>\n                </div>\n                <div class="todo-actions">\n                    <button class="btn-todo btn-primary" id="close-about">Close</button>\n                </div>\n            </div>\n        ',document.body.appendChild(n);n.querySelector("#close-about").addEventListener("click",(()=>{document.body.removeChild(n)}))}renderTodos(n="all"){const e=document.querySelector(".tasks-container");let t;switch(n){case"today":t=this.todoManager.getTodayTodos();break;case"upcoming":t=this.todoManager.getUpcomingTodos();break;case"completed":t=this.todoManager.getCompletedTodos();break;default:if(this.activeProjectId){t=this.todoManager.getAllTodos().filter((n=>n.projectId===this.activeProjectId))}else t=this.todoManager.getActiveTodos()}if(this.activeProjectId)return void(e.innerHTML=this.renderTodoList(t));const o=new Map;t.forEach((n=>{const e=n.projectId;this.projectManager.getProject(e)&&(o.has(e)||o.set(e,[]),o.get(e).push(n))}));const r=Array.from(o.entries()).map((([n,e])=>{const t=this.projectManager.getProject(n);return t?`\n                <div class="project-section">\n                    <h3 class="project-header">${t.name}</h3>\n                    ${this.renderTodoList(e)}\n                </div>\n            `:""})).join("");e.innerHTML=r||"<p>No tasks yet</p>"}renderTodoList(n){return n.length?n.map((n=>`\n            <div class="todo-item ${n.completed?"completed":""}" \n                 data-id="${n.id}" \n                 data-project-id="${n.projectId||this.activeProjectId}">\n                <input type="checkbox" class="todo-checkbox" ${n.completed?"checked":""}>\n                <div class="todo-content">\n                    <div class="todo-title">${n.title}</div>\n                    ${n.description?`<div class="todo-description">${n.description}</div>`:""}\n                    <div class="todo-metadata">\n                        ${n.dueDate?`<span>Due: ${n.dueDate}</span>`:""}\n                        <span>Priority: ${n.priority}</span>\n                    </div>\n                </div>\n                <div class="todo-actions">\n                    <button class="edit-todo">\n                        <svg class="feather feather-edit" fill="none" height="16" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"/></svg>\n                    </button>\n                </div>\n            </div>\n        `)).join(""):""}updateMainHeader(n){document.querySelector(".content-header h2").textContent=n}init(){const n=document.createElement("div");n.className="app-container",n.appendChild(this.createHeader()),n.appendChild(this.createSidebar()),n.appendChild(this.createMain());const e=document.getElementById("app");e.innerHTML="",e.appendChild(n),this.setupEventListeners(),this.setupProjectEvents(),this.setupTodoEvents(),this.renderTodos("all")}setupEventListeners(){const n=document.querySelector(".menu-toggle"),e=document.querySelector(".app-sidebar");n.addEventListener("click",(()=>{e.classList.toggle("active")}));const t=document.querySelector(".user-profile"),o=document.querySelector(".user-dropdown");t.addEventListener("click",(()=>{o.style.display="none"===o.style.display?"block":"none"})),document.addEventListener("click",(n=>{t.contains(n.target)||(o.style.display="none")}));document.querySelector(".sign-out").addEventListener("click",(()=>{this.showSignOutConfirmation()}));document.querySelector(".about").addEventListener("click",(()=>{this.showAboutModal()}));document.querySelectorAll(".sidebar-nav a[data-view]").forEach((n=>{n.addEventListener("click",(e=>{e.preventDefault(),document.querySelectorAll(".sidebar-nav a, .project-item").forEach((n=>{n.classList.remove("active")})),n.classList.add("active"),this.activeProjectId=null;const t=n.dataset.view;this.updateMainHeader(n.textContent),this.renderTodos(t)}))}))}setupProjectEvents(){const n=document.querySelector(".projects-list"),e=document.getElementById("add-project-btn"),t=document.querySelector(".add-project-form"),o=document.querySelector(".add-project-input"),r=document.getElementById("save-project-btn");this.renderProjects(this.projectManager.getAllProjects()),e.addEventListener("click",(()=>{e.style.display="none",t.style.display="block",o.focus()})),document.addEventListener("click",(n=>{t.contains(n.target)||n.target===e||(e.style.display="block",t.style.display="none",o.value="")})),r.addEventListener("click",(()=>{const n=o.value.trim();if(n){this.projectManager.createProject(n);this.renderProjects(this.projectManager.getAllProjects()),e.style.display="block",t.style.display="none",o.value=""}})),n.addEventListener("click",(n=>{const e=n.target.closest(".project-item");if(n.target.classList.contains("delete-project")){const e=n.target.closest(".project-item").dataset.id;if(this.projectManager.deleteProject(e),this.activeProjectId===e){this.activeProjectId=null;const n=document.querySelector('.sidebar-nav a[data-view="all"]');n?n.click():(this.updateMainHeader("All Tasks"),this.renderTodos("all"))}this.renderProjects(this.projectManager.getAllProjects())}else if(e){const n=e.dataset.id,t=this.projectManager.getProject(n);this.activeProjectId=n,this.renderProjects(this.projectManager.getAllProjects()),this.updateMainHeader(t.name),this.renderTodos(),document.querySelectorAll(".sidebar-nav a").forEach((n=>{n.classList.remove("active")}))}}))}setupTodoEvents(){const n=document.querySelector(".add-task-btn"),e=document.querySelector(".tasks-container");n.addEventListener("click",(()=>{this.showTodoModal()})),e.addEventListener("click",(n=>{const e=n.target.closest(".todo-item");if(!e)return;const t=e.dataset.id,o=e.dataset.projectId||this.activeProjectId;if(n.target.classList.contains("todo-checkbox")&&(this.todoManager.toggleTodoComplete(o,t),this.renderCurrentView()),n.target.closest(".edit-todo")){const n=this.todoManager.getTodo(o,t);n&&this.showTodoModal(n,o)}}))}renderCurrentView(){const n=document.querySelector(".sidebar-nav a.active"),e=n?n.dataset.view:"all";this.renderTodos(e)}renderProjects(n){const e=document.querySelector(".projects-list"),t=document.querySelector(".add-task-btn");0===n.length?(t.disabled=!0,t.classList.add("disabled")):(t.disabled=!1,t.classList.remove("disabled")),e.innerHTML=n.map((n=>`\n            <li class="project-item ${n.id===this.activeProjectId?"active":""}" data-id="${n.id}">\n                <span class="project-name">${n.name}</span>\n                <button class="delete-project" aria-label="Delete project">×</button>\n            </li>\n        `)).join("")}}class H{constructor(n){this.id=Date.now().toString(),this.name=n,this.todos=[]}}class U{constructor(n){this.projects=[],this.todoManager=n,this.defaultProjects=[{name:"Default Project",task:{title:"Sample Task Title",description:"Sample task description.",priority:"medium",dueDate:()=>new Date(Date.now()+864e5).toISOString().split("T")[0]}}],this.loadProjects()}loadProjects(){const n=localStorage.getItem("ToDoListProjects");if(n)this.projects=JSON.parse(n);else{const n=this.createDefaultProject();this.projects=[n],this.saveProjects()}}saveProjects(){localStorage.setItem("ToDoListProjects",JSON.stringify(this.projects))}createDefaultProject(){const n=this.defaultProjects[0],e=this.createProject(n.name),t=new q(n.task.title,n.task.description,n.task.dueDate(),n.task.priority);return this.todoManager.addTodo(e.id,t),e}createProject(n){const e=new H(n);return this.projects.push(e),this.saveProjects(),e}deleteProject(n){this.projects=this.projects.filter((e=>e.id!==n)),this.saveProjects(),this.todoManager.removeProjectTasks(n)}getProject(n){return this.projects.find((e=>e.id===n))}getAllProjects(){return this.projects}}(new class{constructor(){this.userData={name:"",avatar:""}}createModal(){const n=document.createElement("div");return n.className="overlay",n.innerHTML='\n            <div class="onboarding-modal">\n                <h2>Welcome to ToDoList!</h2>\n                <div id="name-step">\n                    <p>What\'s your name?</p>\n                    <input type="text" id="username" placeholder="Enter your name" required>\n                    <button class="btn btn-primary" id="next-btn">Next</button>\n                </div>\n                <div id="avatar-step" style="display: none;">\n                    <p>Choose a profile picture</p>\n                    <div class="avatar-upload">\n                        <div class="avatar-preview">\n                            <div id="avatar-preview-image"></div>\n                        </div>\n                        <div class="avatar-actions">\n                            <input type="file" id="avatar-upload" accept="image/*" class="file-input">\n                            <label for="avatar-upload" class="btn btn-secondary">Choose File</label>\n                            <button class="btn btn-primary" id="complete-btn">Complete Setup</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        ',n}createDefaultAvatar(n){return`\n            <div class="default-avatar">\n                <span>${n.split(" ").map((n=>n[0])).join("").toUpperCase().slice(0,2)}</span>\n            </div>\n        `}getAvatarOptions(){return["#FF6B6B","#4ECDC4","#45B7D1","#96CEB4","#FFEEAD"].map(((n,e)=>`\n            <div class="avatar-option" data-avatar="avatar${e+1}">\n                <svg width="100%" height="100%" viewBox="0 0 50 50">\n                    <circle cx="25" cy="25" r="20" fill="${n}"/>\n                </svg>\n            </div>\n        `)).join("")}init(){return new Promise((n=>{const e=localStorage.getItem("bootdoUser");if(e)return void n(JSON.parse(e));const t=this.createModal();document.body.appendChild(t);const o=t.querySelector("#name-step"),r=t.querySelector("#avatar-step"),a=t.querySelector("#username"),i=t.querySelector("#next-btn"),s=t.querySelector("#complete-btn"),d=t.querySelector("#avatar-upload");t.querySelector("#avatar-preview-image");i.addEventListener("click",(()=>{if(a.value.trim()){this.userData.name=a.value.trim(),o.style.display="none",r.style.display="block";const n=this.createDefaultAvatar(this.userData.name);t.querySelector("#avatar-preview-image").innerHTML=n,this.userData.avatar="default"}})),d.addEventListener("change",(n=>{const e=n.target.files[0];if(e){const n=new FileReader;n.onload=n=>{const e=n.target.result,o=t.querySelector("#avatar-preview-image");o.innerHTML="",o.style.backgroundImage=`url(${e})`,this.userData.avatar=e},n.readAsDataURL(e)}})),s.addEventListener("click",(()=>{this.completeOnboarding(t,n)}))}))}completeOnboarding(n,e){localStorage.setItem("ToDoListUser",JSON.stringify(this.userData)),document.body.removeChild(n),e(this.userData)}}).init().then((n=>{console.log("User setup complete:",n);const e=new B,t=new U(e);new z(n,e,t).init()}))})();